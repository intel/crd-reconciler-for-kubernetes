version: 2
jobs:
  build:
    # CircleCI ignores tags by default, unless this filter
    # is present. See https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
    filters:
      tags:
    docker:
      - image: ubuntu:16.04
    working_directory: ~/repo
    steps:
      - run:
          name: Installing dependencies
          command: |
            set -x
            apt-get update
            apt-get install -y curl make git ssh tar python
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
            curl -L https://github.com/docker/compose/releases/download/1.16.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            curl -L -o /tmp/gcloud.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-174.0.0-linux-x86_64.tar.gz
            tar -xf /tmp/gcloud.tar.gz -C /usr/local/bin
            /usr/local/bin/google-cloud-sdk/install.sh --quiet
            ln -s /usr/local/bin/google-cloud-sdk/bin/* /usr/local/bin

      # This is done after installing dependencies to avoid using
      # Circle CI's native git client which seems to behave strangely
      # when checking out tags.
      - checkout

      - run:
          name: List available tags
          command: |
            git tag

      - setup_remote_docker

      - run:
          name: Run make dep
          command: |
            set -x
            make dep

      - run:
          name: Run make
          command: |
            set -x
            # Must set GOOGLE_PROJECT_ID and GOOGLE_AUTH in environment.
            make -e push-images

      - run:
          name: Run make test-e2e
          command: |
            set -x
            make test-e2e
  integration_trigger:
    docker:
      - image: nanliu/circleci:master
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: neverna-helm integration test
          command: |
            CUSTOM_VALUES=$(cat << EOF
            {
              "stream_prediction_controller": {
                "registry": "gcr.io/",
                "org": "constant-cubist-173123",
                "repo": "stream-prediction-controller",
                "tag": "$(git describe --tags --always --dirty)"
              },
              "model_training_controller": {
                "registry": "gcr.io/",
                "org": "constant-cubist-173123",
                "repo": "model-training-controller",
                "tag": "$(git describe --tags --always --dirty)"
              }
            }
            EOF
            )

            integration NervanaSystems/nervana-helm kubernetes-experimental \
              -K CUSTOM_VALUES -V "${CUSTOM_VALUES}"
workflows:
  version: 2
  test:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - integration_trigger:
          requires:
            - build
