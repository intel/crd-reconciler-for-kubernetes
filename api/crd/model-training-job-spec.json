{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "model-training",
  "description": "Represents a model training job in Nervana Cloud",
  "type": "object",
  "definitions": {
    "apiVersion": {
      "type": "string",
      "description": "API version of job spec e.g. helium.aipg.intel.com/v1",
      "pattern": "^([a-zA-Z0-9\\-_]+)(\\.[a-zA-Z0-9\\-_]+)*\\/([a-zA-Z0-9\\-_]+)(\\/[a-zA-Z0-9\\-_]+)*$"
    },
    "resourceSpec": {
      "type": "object",
      "description": "Resource requirements for the model training job. These resources are passed directly to Kubernetes.",
      "properties": {
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "state": {
      "type": "string",
      "description": "The state space for a model training job. 'Pending' is the initial state, and 'Completed' and 'Failed' are terminal.",
      "enum": ["Pending", "Running", "Completed", "Failed"]
    },
    "containerSpec": {
      "type": "object",
      "description": "The container spec describes the container and entry point for the model training job.",
      "properties": {
        "image": {
          "type": "string",
          "description": "Base image of Neon container. If not present, default will be used."
        },
        "command": {
          "type": "string",
          "description": "Command executed as entrypoint to the container. First item should be the binary to execute."
        },
        "sidecarImage": {
          "type": "string",
          "description": "Specifies the image for the sidecar container"
        },
        "nflImage": {
          "type": "string",
          "description": "Specifies the image for the NFL container"
        }
      }
    },
    "s3URL": {
      "type": "string",
      "format": "URI",
      "description": "S3 URL to Amazon S3 bucket. Should start with 's3://'"
    },
    "repoSpec": {
      "type": "object",
      "required": ["url", "commit"],
      "description": "Describes a git repository to pull into the container at runtime",
      "properties": {
        "url": {
          "type": "string",
          "description": "Git URL of repository"
        },
        "commit": {
          "type": "string",
          "description": "Either branch, tag or commit."
        },
        "name": {
          "type": "string",
          "description": "The name of the repo"
        }
      }
    }
  },
  "required": ["apiVersion", "kind", "spec"],
  "properties": {
    "apiVersion": {
      "$ref": "#/definitions/apiVersion"
    },
    "kind": {
      "type": "string",
      "description": "Job type. Only allowed value is 'ModelTraining'",
      "enum": [ "ModelTraining" ]
    },
    "spec": {
      "type": "object",
      "description": "The specification for the job and encode all information needed to run the model training job. The job controllers will monitor for changes continously and act based on the desired state encoded here",
      "required": ["state", "containerSpec", "sandboxS3URLPath", "jobID", "tenantID"],
      "properties": {
        "state": {
          "$ref": "#/definitions/state"
        },
        "resourceSpec": {
          "$ref": "#/definitions/resourceSpec"
        },
        "containerSpec": {
          "$ref": "#/definitions/containerSpec"
        },
        "sandboxS3URL": {
          "$ref": "#/definitions/s3URL"
        },
        "volumeS3URLs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/s3URL"
          }
        },
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/repoSpec"
          }
        },
        "continuationS3URL": {
          "$ref": "#/definitions/s3URL"
        },
        "metricsURL": {
          "type": "string",
          "format": "URI",
          "description": "Call back URL for job to keep Helium up to date with the ongoing job process."
        },
        "jobID": {
          "type": "string",
          "description": "The unique job id identifying the job"
        },
        "tenantID": {
          "type": "string",
          "description": "The unique tenant id specifying which tenant started the job"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Describes the current status of the model training job i.e. the details of how the job sub-components are realizing the higher level job objective",
      "required": ["state"],
      "properties": {
        "state": {
          "$ref": "#/definitions/state"
        },
        "message": {
          "type": "string",
          "description": "Describes the reason for the model training job being in its current state"
        }
      }
    }
  }
}
