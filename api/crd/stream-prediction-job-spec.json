{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "stream-prediction",
  "description": "Represents a stream prediction job in Nervana Cloud",
  "type": "object",
  "definitions": {
    "apiVersion": {
      "type": "string",
      "description": "API version of job spec e.g. helium.aipg.intel.com/v1",
      "pattern": "^([a-zA-Z0-9\\-_]+)(\\.[a-zA-Z0-9\\-_]+)*\\/([a-zA-Z0-9\\-_]+)(\\/[a-zA-Z0-9\\-_]+)*$"
    },
    "securitySpec": {
      "type": "object",
      "required": ["presignedToken", "jwtToken"],
      "properties": {
        "presignedToken": {
          "type": "string"
        },
        "jwtToken": {
          "type": "string"
        }
      }
    },
    "neonRepoSpec": {
      "type": "object",
      "description": "Encodes which neon source code to use for the stream prediction runtime",
      "required": ["repoURL", "commit"],
      "properties": {
        "repoURL": {
          "type": "string",
          "description": "The git url for neon to use in stream prediction"
        },
        "commit": {
          "type": "string",
          "description": "git SHA1 or branch name to check out"
        }
      }
    },
    "kryptonRepoSpec": {
      "type": "object",
      "description": "Encodes which krypton source code to use for the stream prediction runtime",
      "required": ["repoURL", "commit", "image", "sidecarImage"],
      "properties": {
        "repoURL": {
          "type": "string",
          "description": "The git url for krypton to use in stream prediction"
        },
        "commit": {
          "type": "string",
          "description": "git SHA1 or branch name to check out"
        },
        "image": {
          "type": "string",
          "description": "Docker image path for krypton container image"
        },
        "sidecarImage": {
          "type": "string",
          "description": "Docker image path for krypton side car container image"
        }
      }
    },
    "streamDataSpec": {
      "type": "object",
      "required": ["streamID", "streamName"],
      "properties": {
        "streamID": {
          "type": "number",
          "description": "The ID of the stream"
        },
        "streamName": {
          "type": "string",
          "description": "The name of the stream"
        },
        "modelPRM": {
          "type": "string",
          "description": "URL to model parameter file"
        },
        "modelPath": {
          "type": "string",
          "description": "URL to model file",
          "format": "uri"
        },
        "datasetPath": {
          "type": "string",
          "description": "URL to data set file"
        },
        "extraFilename": {
          "type": "string",
          "description": "Local files to copy into sandbox of the stream prediction runtime"
        },
        "customCodeURL": {
          "type": "string",
          "description": "Enables a custom git repository to be pulled into the sandbox of the stream prediction runtime"
        },
        "customCommit": {
          "type": "string",
          "description": "git SHA1 or branch name to check out"
        },
        "awsPath": {
          "type": "string",
          "description": "Sandbox for job files. Log files from the job execution will end up here as well."
        },
        "awsDefaultRegion": {
          "type": "string",
          "description": "The default AWS region to use for s3 downloads."
        }
      }
    },
    "resourceSpec": {
      "type": "object",
      "description": "Resource requirements for the stream prediction job. These resources are passed directly to Kubernetes.",
      "properties": {
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "state": {
      "type": "string",
      "description": "The state space for a stream prediction job. 'Pending' is the initial state, and 'Completed' and 'Failed' are terminal.",
      "enum": ["Pending", "Running", "Completed", "Failed"]
    }
  },
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "properties": {
    "apiVersion": {
      "$ref": "#/definitions/apiVersion"
    },
    "kind": {
      "type": "string",
      "description": "Job type. Only allowed value is 'StreamPrediction'",
      "enum": [ "StreamPrediction" ]
    },
    "metadata": {
      "type": "object",
      "description": "Kubernetes metadata",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Stream prediction job name e.g. stream-12"
        }
      }
    },
    "spec": {
      "type": "object",
      "description": "The specification for the job and encode all information needed to run the stream prediction job. The job controllers will monitor for changes continously and act based on the desired state encoded here",
      "required": ["neonRepoSpec", "securitySpec", "streamDataSpec", "kryptonRepoSpec", "state"],
      "properties": {
        "securitySpec": {
          "$ref": "#/definitions/securitySpec"
        },
        "neonRepoSpec": {
          "$ref": "#/definitions/neonRepoSpec"
        },
        "kryptonRepoSpec": {
          "$ref": "#/definitions/kryptonRepoSpec"
        },
        "streamDataSpec": {
          "$ref": "#/definitions/streamDataSpec"
        },
        "state": {
          "$ref": "#/definitions/state"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Describes the current status of the stream prediction job i.e. the details of how the job sub-components are realizing the higher level job objective",
      "required": ["state"],
      "properties": {
        "state": {
          "$ref": "#/definitions/state"
        },
        "message": {
          "type": "string",
          "description": "Describes the reason for the stream prediction job being in its current state"
        }
      }
    }
  }
}
