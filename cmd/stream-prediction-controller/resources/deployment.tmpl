apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{.Spec.StreamDataSpec.StreamName}}"
  namespace: "{{.ObjectMeta.Namespace}}"
  labels:
    run: "{{.Spec.StreamDataSpec.StreamName}}"
    type: stream
    id: "{{.Spec.StreamDataSpec.StreamID}}"
  ownerReferences:
  - apiVersion: {{.APIVersion}}
    kind: {{.Kind}}
    name: {{.Name}}
    uid: {{.UID}}
    controller: {{.Controller}}
    blockOwnerDeletion: {{.BlockOwnerDeletion}}
spec:
  replicas: 1
  minReadySeconds: 60
  template:
    metadata:
      labels:
        run: "{{.Spec.StreamDataSpec.StreamName}}"
        type: stream
        id: "{{.Spec.StreamDataSpec.StreamID}}"
    spec:
      volumes:
        - name: ssh-key-volume
          secret:
            secretName: ssh-keys
        - name: aws-key-volume
          secret:
            secretName: aws-keys
        - name: code
        - name: logs
        - name: config
          configMap:
            name: krypton
            items:
            - key: krypton.conf
              path: krypton.conf
      imagePullSecrets:
        - name: dockerhub
      containers:
      - name: krypton
        image: "{{.Spec.KryptonRepoSpec.Image}}"
        imagePullPolicy: Always
        resources:
          # TODO(niklas): add support for resource limits.
          requests:
{{ range $resource, $request := .Spec.ResourceSpec.Requests }}
            "{{ $resource }}": "{{ ResourceString $request }}"
{{ end }}

          # This is necessary because the alpha GPU support in Kubernetes
          # does not correctly assign a device to the container unless
          # present in limits.
          #
          # TODO(connor): make this generic again when the behavior is fixed
          #               upstream.
{{ $gpu_request := index .Spec.ResourceSpec.Requests "alpha.kubernetes.io/nvidia-gpu" }}
{{if $gpu_request }}
          limits:
            "alpha.kubernetes.io/nvidia-gpu": "{{ ResourceString $gpu_request }}"
{{end}}

        env:
        - name: PRESIGNED_TOKEN
          value: "{{.Spec.SecuritySpec.PresignedToken}}"
        - name: JWT_TOKEN
          value: "{{.Spec.SecuritySpec.JWTToken}}"
        - name: STREAM_ID
          value: "{{.Spec.StreamDataSpec.StreamID}}"
        - name: WEIGHTS_FILENAME
          value: "/code/{{.Spec.StreamDataSpec.ModelPath}}"
        - name: PYTHONPATH
          value: /code/cust/:/code/
        - name: MODEL_ENVIRONMENT
          value: neon
        volumeMounts:
        - name: code
          mountPath: /code/
        - name: logs
          mountPath: /var/log/krypton
        - name: config
          mountPath: /etc/krypton/
        ports:
        - containerPort: 80
      - name: krypton-sidecar
        image: "{{.Spec.KryptonRepoSpec.SidecarImage}}"
        imagePullPolicy: Always
        resources:
          # We set requests == limits in order to attain Guaranteed QoS class.
          limits:
            cpu: 600m
            memory: 800Mi
          requests:
            cpu: 600m
            memory: 800Mi
        env:
        - name: STREAM_ID
          value: "{{.Spec.StreamDataSpec.StreamID}}"
        - name: NEON_REPO_URL
          value: "{{.Spec.NeonRepoSpec.RepoURL}}"
        - name: NEON_COMMIT
          value: "{{.Spec.NeonRepoSpec.Commit}}"
        - name: KRYPTON_REPO_URL
          value: "{{.Spec.KryptonRepoSpec.RepoURL}}"
        - name: KRYPTON_COMMIT
          value: "{{.Spec.KryptonRepoSpec.Commit}}"
        - name: WEIGHTS_FILEPATH
          value: "{{.Spec.StreamDataSpec.ModelPRM}}"
        - name: DATASET_PATH
          value: "{{.Spec.StreamDataSpec.DatasetPath}}"
        - name: EXTRA_FILENAME
          value: "{{.Spec.StreamDataSpec.ExtraFilename}}"
        - name: CUST_REPO_URL
          value: "{{.Spec.StreamDataSpec.CustomCodeURL}}"
        - name: CUST_COMMIT_ID
          value: "{{.Spec.StreamDataSpec.CustomCommit}}"
        - name: AWS_PREDICT_LOGS_PATH
          value: "{{.Spec.StreamDataSpec.AWSPath}}"
        - name: AWS_DEFAULT_REGION
          value: "{{.Spec.StreamDataSpec.AWSDefaultRegion}}"
        - name: ENVIRONMENT
          value: neon
        - name: WEIGHTS_FILENAME
          value: "{{.Spec.StreamDataSpec.ModelPath}}"
        volumeMounts:
        - name: code
          mountPath: /code/
        - name: logs
          mountPath: /var/log/krypton/
        - name: ssh-key-volume
          mountPath: /root/ssh-keys/
        - name: aws-key-volume
          mountPath: /root/.aws/
